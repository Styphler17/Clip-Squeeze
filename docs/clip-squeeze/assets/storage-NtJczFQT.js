const a={COMPRESSION_HISTORY:"clipsqueeze-history",APP_SETTINGS:"clipsqueeze-settings"},i=()=>{try{const e=localStorage.getItem(a.COMPRESSION_HISTORY);return e?JSON.parse(e):[]}catch(e){return console.error("Error loading compression history:",e),[]}},l=e=>{try{localStorage.setItem(a.COMPRESSION_HISTORY,JSON.stringify(e))}catch(o){console.error("Error saving compression history:",o)}},S=e=>{const o=i(),r=new Date,n={...e,id:`history-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,date:r.toLocaleDateString(),time:r.toLocaleTimeString()};o.unshift(n),l(o)},p=()=>{localStorage.removeItem(a.COMPRESSION_HISTORY)},d=()=>{const e=i(),o=[["File Name","Original Size (MB)","Compressed Size (MB)","Compression Ratio (%)","Preset","Date","Time","Status"],...e.map(t=>[t.fileName,(t.originalSize/(1024*1024)).toFixed(2),(t.compressedSize/(1024*1024)).toFixed(2),t.compressionRatio.toFixed(1),t.preset,t.date,t.time,t.status])].map(t=>t.join(",")).join(`
`),r=new Blob([o],{type:"text/csv"}),n=URL.createObjectURL(r),s=document.createElement("a");s.href=n,s.download=`compression-history-${new Date().toISOString().split("T")[0]}.csv`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)},m=()=>{try{const e=localStorage.getItem(a.APP_SETTINGS);return e?JSON.parse(e):{defaultPreset:"balanced",customSettings:{crf:25,preset:"medium",scale:100,preserveQuality:!1},theme:"system",autoSaveHistory:!0}}catch(e){return console.error("Error loading app settings:",e),{defaultPreset:"balanced",customSettings:{crf:25,preset:"medium",scale:100,preserveQuality:!1},theme:"system",autoSaveHistory:!0}}},g=e=>{try{localStorage.setItem(a.APP_SETTINGS,JSON.stringify(e))}catch(o){console.error("Error saving app settings:",o)}},u=()=>{const e=i(),o=e.filter(t=>t.status==="completed"),r=o.length,n=o.reduce((t,c)=>t+(c.originalSize-c.compressedSize),0),s=o.length>0?o.reduce((t,c)=>t+c.compressionRatio,0)/o.length:0;return{totalCompressions:r,totalSpaceSaved:n,avgCompression:s,totalJobs:e.length}};export{S as a,u as b,p as c,m as d,d as e,i as g,g as s};
